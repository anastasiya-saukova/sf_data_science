Добрый день, Анастасия! Готова обратная связь по вашей работе.  Напомню критерии оценки проекта: 1.     Правильность решения задач, логичность построения запросов. 2.     Читабельность и верное форматирование запросов и кода на Python, наличие комментариев в запросах; аккуратность оформления решения. 3.     Логичность и полнота выводов 4.     Дополнительные исследования данных По каждому из критериев работа оценивается максимум в 2 балла. Всего можно получить 8 баллов за проект. Оценка вашей работы по вышеуказанным критериям: 1.  Правильность решения задач, логичность построения запросов - 2 балла. Все запросы написаны корректно в соответствии с требованиями, выводят те данные, которые необходимо. Средства языка SQL используются уместно в большинстве случаев. Запросы раздела "Юнит 3. Предварительный анализ данных" выполнены хорошо. Очень хорошо, что нет ни одного запроса где были бы безымянные столбцы, имена при этом у вас отражают содержание. Запросы раздела "Юнит 4. Детальный анализ вакансий" демонстрируют, что с группировками, сортировками и ограничением размера выборки у вас все хорошо. Запросы раздела "Юнит 5. Анализ работодателей" с точки зрения результата не вызывают нареканий, но некоторые из них могли бы быть написаны компактнее и немного изящнее. Например: Запрос 5.1 мог бы быть написан (с использованием СTE и оконной функции ROW_NUMBER) так: with cte as (select e.name employee_name, row_number() over (order by count(e.name) desc) as rn from vacancies v join employers e on v.employer_id = e.id group by e.name) select c.employee_name from cte c where rn in (1, 5); Аналогичного эффекта можно добиться с помощью подзапроса: SELECT * FROM ( SELECT emp.name, count(vac.id) AS vacancy_count, ROW_NUMBER() OVER (ORDER BY count(vac.id) DESC) AS row_num FROM public.employers emp JOIN public.vacancies vac ON emp.id = vac.employer_id GROUP BY emp.id ) AS subquery WHERE row_num IN (1, 5); В этом виде мы избавились от дублирования и сделали запрос более компактным и читаемым. Запрос 5.7 с помощью CTE (common table expression https://www.postgresql.org/docs/current/queries-with.html) мог бы быть написан в таком виде, что делало бы его гораздо компактнее и при этом более читабельным: with cte as ( select a.name, count(v.id) cnt from public.vacancies v join public.employers e on e.id = v.employer_id and e.name = 'Яндекс' join public.areas a on a.id = v.area_id and a.name in {cities} group by a.name) select 'Total' as name, sum(cnt) from cte as c union all select c.name, c.cnt from cte as c По разделу "Юнит 6. Предметный анализ" замечаний нет. 2.     Читабельность и верное форматирование запросов и кода на Python, наличие комментариев в запросах; аккуратность оформления решения - 2 балла. Сортировки и группировки лучше выполнять везде через элиасы столбцов, а не через порядковые номера. Это повышает читабельность запросов и делает их более устойчивыми к будущим изменениям. Код на Python написан ясно и чисто. Комментарии присутствуют, где это необходимо. 3.     Логичность и полнота выводов - 2 балла. Выводы сделаны после каждого модуля обстоятельно и подробно. 4.     Дополнительные исследования данных - 2 балла. Дополнительное исследование проведено выводы сделаны. Итоги. Работа выполнена и оформлена очень хорошо. Получено 8 из 8 баллов. В завершение модуля SQL предлагаю посмотреть видео от Валерия Бабушкина (один из самых известных отечественных DS) о знаниях необходимых для начинающего DS https://www.youtube.com/watch?v=gGce2JDbJAQ, в частности, там упоминается SQL, как один из важных компонентов. В связи с этим советую не ограничиваться материалами курса и продолжать параллельно изучать и поддерживать уровень SQL, в качестве дополнительных площадок рекомендую -  https://bygroupby.dev/sql/sites_exercises.html. Дополнительные ссылки. - https://postgrespro.ru/docs/postgresql/9.6/functions-matching#functions-like Оконные функции: - https://www.postgresql.org/docs/current/functions-window.html - https://postgrespro.ru/docs/postgrespro/9.5/functions-window - https://www.postgresqltutorial.com/postgresql-window-function/postgresql-row_number/ Желаю  вам дальнейших успехов в изучении Data Science! Если у вас остались вопросы по проекту, по оценке или любые вопросы, мысли, предложения по SQL - вы всегда можете написать в чате проекта в https://app.pachca.com/. С уважением, проверяющий ментор проекта Вячеслав Гнусарев.